diff -ur old/rtaudio-4.1.1/RtAudio.cpp new/rtaudio-4.1.1/RtAudio.cpp
--- old/rtaudio-4.1.1/RtAudio.cpp	2014-04-26 20:39:15.000000000 +0200
+++ new/rtaudio-4.1.1/RtAudio.cpp	2014-08-03 22:52:59.930133704 +0200
@@ -1890,6 +1890,15 @@
     :client(0), drainCounter(0), internalDrain(false) { ports[0] = 0; ports[1] = 0; xrun[0] = false; xrun[1] = false; }
 };
 
+/* --- Monocasual hack ---------------------------------------------- */
+#ifdef __linux__
+void *RtApi :: __HACK__getJackClient() {
+	JackHandle *handle = (JackHandle *) stream_.apiHandle;
+	return (void*) handle->client;
+}
+#endif
+/* ------------------------------------------------------------------ */
+
 static void jackSilentError( const char * ) {};
 
 RtApiJack :: RtApiJack()
diff -ur old/rtaudio-4.1.1/RtAudio.h new/rtaudio-4.1.1/RtAudio.h
--- old/rtaudio-4.1.1/RtAudio.h	2014-04-26 20:39:15.000000000 +0200
+++ new/rtaudio-4.1.1/RtAudio.h	2014-08-03 22:54:38.243267297 +0200
@@ -49,6 +49,13 @@
 
 #include <string>
 #include <vector>
+
+/* --- Monocasual hack ---------------------------------------------- */
+#if defined(__linux__)
+#include <jack/jack.h>
+#endif
+/* ------------------------------------------------------------------ */
+
 #include <exception>
 #include <iostream>
 
@@ -565,8 +572,10 @@
 
   //! Specify whether warning messages should be printed to stderr.
   void showWarnings( bool value = true ) throw();
-
- protected:
+  
+/* --- Monocasual hack ---------------------------------------------- */
+	//protected:
+/* ------------------------------------------------------------------ */
 
   void openRtApi( RtAudio::Api api );
   RtApi *rtapi_;
@@ -672,6 +681,12 @@
 {
 public:
 
+/* --- Monocasual hack ---------------------------------------------- */
+#ifdef __linux__
+	void *__HACK__getJackClient();
+#endif
+/* ------------------------------------------------------------------ */
+
   RtApi();
   virtual ~RtApi();
   virtual RtAudio::Api getCurrentApi( void ) = 0;
